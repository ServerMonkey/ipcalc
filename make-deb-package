#!/bin/sh

# run from anywhere
APP_DIR_FULL=$(realpath "$0")
APP_DIR=$(dirname "$APP_DIR_FULL")
cd "$APP_DIR" || exit 1

# automatic increase minor version number whith each build
VERSION_FILE="version"
VERSION_MAJOR=$(sed -n '1p' $VERSION_FILE)
VERSION_MINOR=$(sed -n '2p' $VERSION_FILE)
VERSION_MINOR_NEW=$((1 + VERSION_MINOR))
sed -i "2 s/$VERSION_MINOR\$/$VERSION_MINOR_NEW/g" $VERSION_FILE
VERSION="$VERSION_MAJOR.$VERSION_MINOR_NEW"

# variables
NAME="ipcalc"
RELEASES="releases"
TARGET="DEBIAN"
PATH_BASE="./$RELEASES/$NAME-$VERSION"
PATH_INSTALL="$PATH_BASE/usr"
PATH_BIN="$PATH_INSTALL/bin"
PATH_SHARE="$PATH_INSTALL/share"
PATH_DOCS="$PATH_SHARE/doc/$NAME"
PATH_EXAMPLES="$PATH_DOCS/examples"
PATH_MAN="$PATH_SHARE/man/man1"
PATH_TARGET="$PATH_BASE/$TARGET"

# delete the old build
echo "Cleaning up old build"
rm -rf "$PATH_BASE"

# copy relevant files from source to release
echo "Copying relevant source files"
mkdir -p "$PATH_EXAMPLES" "$PATH_MAN" "$PATH_BIN"
cp -t "$PATH_BIN" "ipcalc" || exit 1
cp -t "$PATH_DOCS" "README.md" "license" "contributors" "changelog" || exit 1
cp -t "$PATH_EXAMPLES" "ipcalc.cgi" "ipcalc.gif" "ipcalculator.png" || exit 1
cp -t "$PATH_MAN" "ipcalc.1" || exit 1

# create Debian control file
echo "Creating CONTROL file"
mkdir -p "$PATH_TARGET"
echo "Package: $NAME
Version: $VERSION
Section: net
Priority: optional
Architecture: all
Maintainer: Bodo Endres <dev@muspekaren.se>
Depends: perl:any
Homepage: http://jodies.de/ipcalc
Description: parameter calculator for IPv4 addresses
 ipcalc takes an IPv4 address and netmask and calculates the resulting
 broadcast, network, Cisco wildcard mask, and host range. By giving a
 second netmask, you can design sub- and supernetworks. It is also
 intended to be a teaching tool and presents the results as
 easy-to-understand binary values.
 .
 Originally, ipcalc was intended for use from the shell prompt, but a
 CGI wrapper is provided to enable colorful HTML display through a
 webserver.
 You can find it in /usr/share/doc/ipcalc/examples directory.
" >"$PATH_TARGET/control"

# build
echo "Building"
fakeroot dpkg-deb --build "$PATH_BASE"

# pack source files
echo "Packing source"
zip -q -r "$RELEASES/$NAME-$VERSION.source.zip" ./* \
    -x $RELEASES\* \
    -x .*\* \
    -x ./*DEV_\*
wait

# replace latest version
cp "$PATH_BASE.deb" "$RELEASES/$NAME-LATEST.deb"
cp "$PATH_BASE.source.zip" "$RELEASES/$NAME-LATEST-source.zip"

# clean up
echo "Clean up"
rm -rf "$PATH_BASE"

# check
echo "Checking:"
lintian -c "$PATH_BASE.deb"
